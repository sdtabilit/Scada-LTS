name: Simple Scada-LTS workflow
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  compile:
    name: Compile and Test Scada-LTS application
    runs-on: ubuntu-latest
    env:
      CATALINA_HOME: /home/runner/tomcat/apache-tomcat-7.0.85
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Tomcat
        run: mkdir /home/runner/tomcat; cd /home/runner/tomcat; wget https://archive.apache.org/dist/tomcat/tomcat-7/v7.0.85/bin/apache-tomcat-7.0.85.tar.gz; tar xvzf apache-tomcat-7.0.85.tar.gz
      - name: Show Tomcat
        run: ls $CATALINA_HOME
      - name: Cache Tomcat
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-tomcat-${{ github.run_id }}
          path: /home/runner/tomcat
      - name: Build Scada Application with Ant
        run: ant -noinput -buildfile build.xml build-no-ui-skip-test
      - name: JUnit Scada Application with Ant
        run: ant -noinput -buildfile build.xml test-junit
      - name: Show JUnit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: Java JUnit Test Results
          files: ./build/test-reports/**/*.xml
      - name: Publish JUnit Test Results
        uses: actions/upload-artifact@v2
        with:
          name: junit-java-test-results
          path: ./build/test-reports/
      - name: Cache Scada-LTS application
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-slts-${{ github.run_id }}
          path: ./build/

  buildui:
    name: Test and Build Scada-LTS new User Interface
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ github.run_id }}
      - name: Install dependencies
        working-directory: ./scadalts-ui
        run: npm install
      - name: Run Frontend UnitTests
        working-directory: ./scadalts-ui
        run: npm run-script test:unit
      - name: Show Mocha Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: Java Script Mocha Unit Test Results
          files: ./scadalts-ui/test-results.xml
      - name: Publish Mocha Test Results
        uses: actions/upload-artifact@v2
        with:
          name: mocha-js-test-results
          path: ./scadalts-ui/test-results.xml
      - name: Prepare Application Vairables
        working-directory: ./scadalts-ui
        run: npm run-script build-config -- 2.7.0 $GITHUB_RUN_ID $GITHUB_HEAD_REF $GITHUB_SHA $GITHUB_ACTOR $GITHUB_BASE_REF
      - name: Build User Interface
        working-directory: ./scadalts-ui
        run: npm run-script build
      - name: Cache Frontend
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-frontend-${{ github.run_id }}
          path: ./scadalts-ui/dist

  deploy:
    name: Deploy Scada-LTS application
    needs: [compile, buildui]
    runs-on: ubuntu-latest
    env:
      CATALINA_HOME: /home/runner/tomcat/apache-tomcat-7.0.85
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Load Cached node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ github.run_id }}
      - name: Load Cached Scada-LTS application
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-slts-${{ github.run_id }}
          path: ./build/
      - name: Load Cached Frontend
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-frontend-${{ github.run_id }}
          path: ./scadalts-ui/dist
      - name: Install static web-dependencies
        working-directory: ./WebContent/resources
        run: npm install
      - name: Build Scada Application with Ant
        run: ant -noinput -buildfile build.xml create-war
      - name: Deploy WAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: Scada-LTS
          path: ScadaBR.war